name: Backend CI/CD Pipeline

on:
  workflow_call:
    inputs:
      tags:
        required: true
        type: string
      labels:
        required: true
        type: string

env:
  DOCKER_REGISTRY: docker.io
  CONTEXT_PATH: ./backend

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout remote repository
      id: checkout
      uses: actions/checkout@v4
      with:
        repository: RanMarkovich/DevOps-Playground
        ref: main
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ env.CONTEXT_PATH }}
        load: true
        tags: ${{ inputs.tags }}
        labels: ${{ inputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Run Docker container for testing
      run: |
        # Get the first tag from the metadata output
        IMAGE_TAG=$(echo "${{ inputs.tags }}" | head -n1)
        echo "Running container with image: $IMAGE_TAG"
        
        # Start the container in detached mode
        docker run -d --name backend-test -p 5000:5000 $IMAGE_TAG
        
        # Wait for container to start
        sleep 10
    
    - name: Health check
      run: |
        # Wait for the service to be ready (with timeout)
        timeout 60s bash -c 'until curl -f http://localhost:5000/health; do echo "Waiting for service..."; sleep 5; done'
        
        # Verify health check response
        response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5000/health)
        if [ $response -eq 200 ]; then
          echo "‚úÖ Health check passed"
        else
          echo "‚ùå Health check failed with status: $response"
          exit 1
        fi
    
    - name: Stop test container
      if: always()
      run: |
        docker stop backend-test || true
        docker rm backend-test || true
    
    - name: Push Docker image to Docker Hub
      uses: docker/build-push-action@v5
      with:
        context: ${{ env.CONTEXT_PATH }}
        push: true
        tags: ${{ inputs.tags }}
        labels: ${{ inputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Output image details
      run: |
        echo "üê≥ Docker images pushed:"
        echo "${{ inputs.tags }}" | sed 's/^/  - /'
        echo ""
        echo "üìã Labels:"
        echo "${{ inputs.labels }}" | sed 's/^/  - /'
